Author: Thiago Marcos P. Santos <thiago.santos@intel.com>
Date:   Thu Oct 23 22:15:41 2014 +0300

    Generate the license acknowledgments for Crosswalk

diff --git a/tools/copyright.tmpl b/tools/copyright.tmpl
new file mode 100644
index 0000000..73bc91b
--- /dev/null
+++ b/tools/copyright.tmpl
@@ -0,0 +1,6 @@
+Component: {{name}}
+Homepage: {{url}}
+License:
+
+{{license}}
+

diff --git a/tools/licenses.py b/tools/licenses.py
index aabed42..1ba4a6e2 100755
--- a/tools/licenses.py
+++ b/tools/licenses.py
@@ -99,6 +99,7 @@ ADDITIONAL_PATHS = (
     # Fake directory so we can include the strongtalk license.
     os.path.join('v8', 'strongtalk'),
     os.path.join('v8', 'third_party', 'fdlibm'),
+    os.path.join('xwalk'),
 )
 
 
@@ -106,6 +107,12 @@ ADDITIONAL_PATHS = (
 # can't provide a README.chromium.  Please prefer a README.chromium
 # wherever possible.
 SPECIAL_CASES = {
+    os.path.join('xwalk'): {
+        "Name": "Crosswalk Web Runtime",
+        "URL": "http://crosswalk-project.org",
+        "License": "BSD",
+        "License File": "/xwalk/LICENSE",
+    },
     os.path.join('native_client'): {
         "Name": "native client",
         "URL": "http://code.google.com/p/nativeclient",
@@ -412,8 +419,8 @@ def GenerateCredits():
     root = os.path.join(os.path.dirname(__file__), '..')
     third_party_dirs = FindThirdPartyDirs(PRUNE_PATHS, root)
 
-    entry_template = open(os.path.join(root, 'chrome', 'browser', 'resources',
-                                       'about_credits_entry.tmpl'), 'rb').read()
+    entry_template = open(os.path.join(root, 'tools',
+                                       'copyright.tmpl'), 'rb').read()
     entries = []
     for path in sorted(third_party_dirs):
         try:
@@ -430,12 +437,7 @@ def GenerateCredits():
         }
         entries.append(EvaluateTemplate(entry_template, env))
 
-    file_template = open(os.path.join(root, 'chrome', 'browser', 'resources',
-                                      'about_credits.tmpl'), 'rb').read()
-    template_contents = "<!-- Generated by licenses.py; do not edit. -->"
-    template_contents += EvaluateTemplate(file_template,
-                                          {'entries': '\n'.join(entries)},
-                                          escape=False)
+    template_contents = '\n'.join(entries)
 
     if len(sys.argv) == 3:
       with open(sys.argv[2], 'w') as output_file:
